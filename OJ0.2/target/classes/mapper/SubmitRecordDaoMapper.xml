<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.otime.dao.SubmitRecordDao">

	<resultMap type="User" id="BaseUserResult">
		<id column="user_pk" property="id"/>
		<result column="nickname" property="nickname"/>
		<result column="email" property="email"/>
		<result column="password" property="password"/>
	</resultMap>
	
	<resultMap type="Problem" id="BaseProblemResult">
		<id column="problem_pk" property="id"/>
		<result column="title" property="title"/>
		<result column="description" property="description"/>
		<result column="inputFormat" property="inputFormat"/>
		<result column="outputFormat" property="outputFormat"/>
		<result column="timeLimit" property="timeLimit"/>
		<result column="memoryLimit" property="memoryLimit"/>
		<result column="totalSubmissions" property="totalSubmissions"/>
		<result column="acceptSubmissions" property="acceptSubmissions"/>
	</resultMap>

	<resultMap type="SubmitRecord" id="BaseSubmitRecordResult">
		<id column="submitRecord_pk" property="id"/>
		<result column="contentType" property="contentType"/>
		<result column="content" property="content"/>
		<result column="executionTime" property="executionTime"/>
		<result column="memoryCost" property="memoryCost"/>
		<result column="score" property="score"/>
		<result column="result" property="result"/>
		<result column="submitDate" property="date"/>
	</resultMap>
	
	
	<resultMap type="SubmitRecord" id="SubmitRecordResult" extends="BaseSubmitRecordResult">
		<association property="user" resultMap="BaseUserResult"></association>
		<association property="problem" resultMap="BaseProblemResult"></association>
	</resultMap>
	
	<!-- public SubmitRecord getSubmitRecord(Integer id); --> 	
	<select id="getSubmitRecord" parameterType="int" resultMap="SubmitRecordResult">
		SELECT
			s.id as submitRecord_pk,
			contentType,
			content,
			executionTime,
			memoryCost,
			score,
			result,
			submitDate,
			u.id as user_pk,
			nickname,
			email,
			password,
			p.id as problem_pk,
			title,
			description,
			inputFormat,
			outputFormat,
			timeLimit, 
			memoryLimit, 
			totalSubmissions,
			acceptSubmissions
		FROM
			OJ_SUBMITRECORD s
			LEFT OUTER JOIN OJ_USER u ON s.USER_ID = u.ID
			LEFT OUTER JOIN OJ_PROBLEM p ON s.PROBLEM_ID = p.ID
		WHERE
			s.id=#{id}
	</select>	
	
	<!-- public List<SubmitRecord> getSubmitRecords(); -->
	<select id="getSubmitRecords" resultMap="SubmitRecordResult">
		SELECT
			s.id as submitRecord_pk,
			contentType,
			content,
			executionTime,
			memoryCost,
			score,
			result,
			submitDate,
			u.id as user_pk,
			nickname,
			email,
			password,
			p.id as problem_pk,
			title,
			description,
			inputFormat,
			outputFormat,
			timeLimit, 
			memoryLimit, 
			totalSubmissions,
			acceptSubmissions
		FROM
			OJ_SUBMITRECORD s
			LEFT OUTER JOIN OJ_USER u ON s.USER_ID = u.ID
			LEFT OUTER JOIN OJ_PROBLEM p ON s.PROBLEM_ID = p.ID
		ORDER BY
			s.submitDate desc
	</select>	
	<!-- public List<SubmitRecord> getSubmitRecords(Map<String, Object> map); -->
	
	<!-- public SubmitRecord getSubmitRecordWithJudgeRecord(Integer id); -->
	<!-- public List<SubmitRecord> getSubmitRecordsOfProblem(Integer problemId); -->
	<!-- public List<SubmitRecord> getSubmitRecordsOfUser(Integer userId); -->
	<!-- public void addSubmitRecord(SubmitRecord submitRecord); -->
	<insert id="addSubmitRecord" parameterType="SubmitRecord">
		<selectKey keyProperty="id" resultType="int" order="BEFORE">
			SELECT SEQ_OJ_SUBMITRECORD.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO
		OJ_SUBMITRECORD(
			id,
			user_id,
			problem_id,
			contentType,
			content,
			executionTime,
			memoryCost,
			score,
			result,
			submitDate
		) values (
			#{id},
			#{user.id},
			#{problem.id},
			#{contentType},
			#{content},
			#{executionTime},
		    #{memoryCost},
		    #{score},
		    #{result},
		    #{date}
		)
	</insert>
	<!-- public void removeSubmitRecord(Integer id); -->
	<!-- public void removeSubmitRecordsOfProblem(Integer problemId); -->
	<!-- public void removeSubmitRecordsOfUser(Integer userId); -->
</mapper>